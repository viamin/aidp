# Production AIDP Configuration
# This is a production-ready configuration with comprehensive monitoring and security
# Copy this file to your project root as 'aidp.yml' and customize as needed

# Harness configuration
harness:
  # Default provider to use
  default_provider: "claude"

  # Fallback providers in order of preference
  fallback_providers: ["cursor", "gemini"]

  # Production settings
  max_retries: 3
  request_timeout: 300
  user_feedback_timeout: 300
  work_completion_timeout: 1800

  # Advanced features
  auto_switch_on_error: true
  auto_switch_on_rate_limit: true
  max_concurrent_requests: 10

  # Circuit breaker configuration
  circuit_breaker:
    enabled: true
    failure_threshold: 5
    timeout: 300
    half_open_max_calls: 3

  # Retry configuration
  retry:
    enabled: true
    max_attempts: 3
    base_delay: 2.0
    max_delay: 120.0
    exponential_base: 2.0
    jitter: true

  # Rate limiting configuration
  rate_limit:
    enabled: true
    default_reset_time: 3600
    burst_limit: 20
    sustained_limit: 10

  # Load balancing configuration
  load_balancing:
    enabled: true
    strategy: "weighted_round_robin"
    health_check_interval: 30
    unhealthy_threshold: 3

  # Health check configuration
  health_check:
    enabled: true
    interval: 60
    timeout: 15
    failure_threshold: 3
    success_threshold: 2

  # Metrics configuration
  metrics:
    enabled: true
    retention_days: 90
    aggregation_interval: 300
    export_interval: 3600

  # Session configuration
  session:
    enabled: true
    timeout: 3600
    sticky_sessions: true
    session_affinity: "provider_model"

  # User interface configuration
  ui:
    enabled: true
    interactive_mode: true
    file_selection: true
    progress_display: true
    status_updates: true
    pause_resume: true

  # Error handling configuration
  error_handling:
    enabled: true
    log_errors: true
    retry_on_error: true
    fallback_on_error: true
    error_notification: true

  # Performance optimization
  performance:
    enabled: true
    cache_responses: true
    parallel_processing: true
    batch_requests: true
    connection_pooling: true

  # Security configuration
  security:
    enabled: true
    ssl_verify: true
    allowed_hosts: []
    blocked_hosts: []
    api_key_rotation: true
    audit_logging: true

# Provider configurations
providers:
  # Claude provider (primary)
  claude:
    type: "api"
    priority: 1
    max_tokens: 200000
    default_flags: ["--dangerously-skip-permissions"]

    # Available models
    models: ["claude-3-5-sonnet-20241022", "claude-3-5-haiku-20241022"]

    # Model weights for load balancing
    model_weights:
      claude-3-5-sonnet-20241022: 3
      claude-3-5-haiku-20241022: 2

    # Model-specific configurations
    models_config:
      claude-3-5-sonnet-20241022:
        flags: ["--dangerously-skip-permissions"]
        max_tokens: 200000
        timeout: 300
      claude-3-5-haiku-20241022:
        flags: ["--dangerously-skip-permissions"]
        max_tokens: 200000
        timeout: 180

    # Authentication configuration
    auth:
      api_key_env: "ANTHROPIC_API_KEY"

    # Endpoint configuration
    endpoints:
      default: "https://api.anthropic.com/v1/messages"

    # Provider features
    features:
      file_upload: true
      code_generation: true
      analysis: true
      vision: true
      streaming: true
      function_calling: true
      tool_use: true

    # Monitoring configuration
    monitoring:
      enabled: true
      metrics_interval: 30

    # Rate limiting configuration
    rate_limit:
      enabled: true
      requests_per_minute: 50
      requests_per_hour: 5000
      tokens_per_minute: 40000
      tokens_per_hour: 2000000
      burst_limit: 5

    # Retry configuration
    retry:
      enabled: true
      max_attempts: 3
      base_delay: 2.0
      max_delay: 120.0
      exponential_base: 2.0
      jitter: true
      retry_on_rate_limit: true

    # Circuit breaker configuration
    circuit_breaker:
      enabled: true
      failure_threshold: 5
      timeout: 300
      half_open_max_calls: 3

    # Cost tracking
    cost:
      input_cost_per_token: 0.000003
      output_cost_per_token: 0.000015
      fixed_cost_per_request: 0.0
      currency: "USD"

    # Health check configuration
    health_check:
      enabled: true
      interval: 60
      timeout: 15
      failure_threshold: 3
      success_threshold: 2
      check_url: "https://api.anthropic.com/v1/messages"

    # Logging configuration
    log:
      enabled: true
      level: "info"
      file: "logs/claude.log"
      max_size: 52428800  # 50MB
      max_files: 10
      format: "json"
      log_requests: true
      log_responses: false

    # Cache configuration
    cache:
      enabled: true
      ttl: 1800
      max_size: 500
      strategy: "lru"

    # Security configuration
    security:
      ssl_verify: true
      allowed_hosts: ["api.anthropic.com"]
      blocked_hosts: []
      timeout: 30
      max_redirects: 5

  # Cursor provider (fallback)
    cursor:
      type: "subscription"
    priority: 2
    default_flags: []

    # Available models
    models: ["cursor-default", "cursor-fast"]

    # Model weights for load balancing
    model_weights:
      cursor-default: 3
      cursor-fast: 2

    # Model-specific configurations
    models_config:
      cursor-default:
        flags: []
        timeout: 600
      cursor-fast:
        flags: ["--fast"]
        timeout: 300

    # Provider features
    features:
      file_upload: true
      code_generation: true
      analysis: true
      streaming: true

    # Monitoring configuration
    monitoring:
      enabled: true
      metrics_interval: 30

    # Rate limiting configuration
    rate_limit:
      enabled: true
      requests_per_minute: 60
      requests_per_hour: 1000
      burst_limit: 10

    # Retry configuration
    retry:
      enabled: true
      max_attempts: 3
      base_delay: 1.0
      max_delay: 60.0
      exponential_base: 2.0
      jitter: true

    # Circuit breaker configuration
    circuit_breaker:
      enabled: true
      failure_threshold: 5
      timeout: 300
      half_open_max_calls: 3

    # Cost tracking
    cost:
      input_cost_per_token: 0.0
      output_cost_per_token: 0.0
      fixed_cost_per_request: 0.0
      currency: "USD"

    # Health check configuration
    health_check:
      enabled: true
      interval: 60
      timeout: 10
      failure_threshold: 3
      success_threshold: 2

    # Logging configuration
    log:
      enabled: true
      level: "info"
      file: "logs/cursor.log"
      max_size: 52428800  # 50MB
      max_files: 10
      format: "json"
      log_requests: true
      log_responses: false

    # Cache configuration
    cache:
      enabled: true
      ttl: 3600
      max_size: 200
      strategy: "lru"

    # Security configuration
    security:
      ssl_verify: true
      allowed_hosts: []
      blocked_hosts: []
      timeout: 30
      max_redirects: 5

  # Gemini provider (fallback)
  gemini:
    type: "api"
    priority: 3
    max_tokens: 100000
    default_flags: []

    # Available models
    models: ["gemini-1.5-pro", "gemini-1.5-flash"]

    # Model weights for load balancing
    model_weights:
      gemini-1.5-pro: 3
      gemini-1.5-flash: 2

    # Model-specific configurations
    models_config:
      gemini-1.5-pro:
        flags: []
        max_tokens: 100000
        timeout: 300
      gemini-1.5-flash:
        flags: []
        max_tokens: 100000
        timeout: 180

    # Authentication configuration
    auth:
      api_key_env: "GEMINI_API_KEY"

    # Endpoint configuration
    endpoints:
      default: "https://generativelanguage.googleapis.com/v1beta/models"

    # Provider features
    features:
      file_upload: true
      code_generation: true
      analysis: true
      vision: true
      streaming: true

    # Monitoring configuration
    monitoring:
      enabled: true
      metrics_interval: 30

    # Rate limiting configuration
    rate_limit:
      enabled: true
      requests_per_minute: 60
      requests_per_hour: 1500
      tokens_per_minute: 32000
      tokens_per_hour: 1000000
      burst_limit: 10

    # Retry configuration
    retry:
      enabled: true
      max_attempts: 3
      base_delay: 1.0
      max_delay: 60.0
      exponential_base: 2.0
      jitter: true
      retry_on_rate_limit: true

    # Circuit breaker configuration
    circuit_breaker:
      enabled: true
      failure_threshold: 5
      timeout: 300
      half_open_max_calls: 3

    # Cost tracking
    cost:
      input_cost_per_token: 0.00000125
      output_cost_per_token: 0.000005
      fixed_cost_per_request: 0.0
      currency: "USD"

    # Health check configuration
    health_check:
      enabled: true
      interval: 60
      timeout: 15
      failure_threshold: 3
      success_threshold: 2
      check_url: "https://generativelanguage.googleapis.com/v1beta/models"

    # Logging configuration
    log:
      enabled: true
      level: "info"
      file: "logs/gemini.log"
      max_size: 52428800  # 50MB
      max_files: 10
      format: "json"
      log_requests: true
      log_responses: false

    # Cache configuration
    cache:
      enabled: true
      ttl: 1800
      max_size: 500
      strategy: "lru"

    # Security configuration
    security:
      ssl_verify: true
      allowed_hosts: ["generativelanguage.googleapis.com"]
      blocked_hosts: []
      timeout: 30
      max_redirects: 5

# Environment-specific configurations
environments:
  production:
    harness:
      max_retries: 3
      request_timeout: 300
    providers:
      claude:
        rate_limit:
          requests_per_minute: 50
        log:
          level: "info"
      cursor:
        log:
          level: "warn"
      gemini:
        rate_limit:
          requests_per_minute: 60
        log:
          level: "info"

# Configuration tips for production:
# - Set up proper API keys in environment variables
# - Configure monitoring and alerting
# - Set up log rotation and retention
# - Configure rate limits based on your API plans
# - Enable circuit breakers for fault tolerance
# - Use load balancing for high availability
# - Configure health checks for all providers
# - Set up cost tracking and budgeting
# - Enable audit logging for compliance
# - Configure security settings appropriately
# - Test failover scenarios regularly
